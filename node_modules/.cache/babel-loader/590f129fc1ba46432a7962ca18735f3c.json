{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\counter\\\\counter.jsx\";\nimport { Component } from \"react\";\nimport { FeedbackOptions } from \"components/counter/FeedbackOptions\";\nimport { Statistics } from \"components/counter/Statistics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Counter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n    this.addFeedback = e => {\n      const feedbackType = e.target.name;\n      this.setState(prevState => {\n        return {\n          [feedbackType]: prevState[feedbackType] + 1\n        };\n      });\n    };\n    this.countTotalFeedback = () => {\n      return this.state.neutral + this.state.bad + this.state.good;\n    };\n    this.countPositiveFeedbackPercentage = () => {\n      const total = this.state.neutral + this.state.bad + this.state.good;\n      return this.state.good / total * 100;\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"load-more\",\n        children: \"Please leave a feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n        addFeedback: this.addFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        good: this.state.good,\n        neutral: this.state.neutral,\n        bad: this.state.bad,\n        total: this.countTotalFeedback(),\n        positivePercentage: this.countPositiveFeedbackPercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n}","map":{"version":3,"names":["Component","FeedbackOptions","Statistics","jsxDEV","_jsxDEV","Counter","constructor","arguments","state","good","neutral","bad","addFeedback","e","feedbackType","target","name","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","total","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","positivePercentage"],"sources":["D:/git/goit-react-hw-02-feedback/src/components/counter/counter.jsx"],"sourcesContent":["import {Component} from \"react\"\r\nimport {FeedbackOptions} from \"components/counter/FeedbackOptions\"\r\nimport {Statistics} from \"components/counter/Statistics\"\r\n\r\nexport class Counter extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n      }\r\n   addFeedback = (e) => {\r\n   const feedbackType = e.target.name;\r\n       this.setState(prevState =>{\r\n           return { \r\n            [feedbackType]: prevState[feedbackType] + 1,\r\n          \r\n            };   \r\n       });\r\n      \r\n   }\r\n\r\n   countTotalFeedback= () => {\r\n       return this.state.neutral +this.state.bad +this.state.good;\r\n   }\r\n\r\n   countPositiveFeedbackPercentage = () => {\r\n    const total = this.state.neutral +this.state.bad +this.state.good;\r\n       return this.state.good/total *100;\r\n   }\r\n\r\n   render() {\r\n       return (\r\n        <div>\r\n            <p className=\"load-more\">Please leave a feedback</p>\r\n\r\n           <FeedbackOptions addFeedback={this.addFeedback} />\r\n          \r\n           <Statistics good={this.state.good} neutral={this.state.neutral} bad={this.state.bad}\r\n            total={this.countTotalFeedback()} positivePercentage={this.countPositiveFeedbackPercentage}/>\r\n    \r\n           \r\n          \r\n\r\n        </div>);\r\n   }\r\n} \r\n "],"mappings":";AAAA,SAAQA,SAAS,QAAO,OAAO;AAC/B,SAAQC,eAAe,QAAO,oCAAoC;AAClE,SAAQC,UAAU,QAAO,+BAA+B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,OAAO,MAAMC,OAAO,SAASL,SAAS,CAAC;EAAAM,YAAA;IAAA,SAAAC,SAAA;IAAA,KACnCC,KAAK,GAAG;MACJC,IAAI,EAAE,CAAC;MACPC,OAAO,EAAE,CAAC;MACVC,GAAG,EAAE;IACP,CAAC;IAAA,KACJC,WAAW,GAAIC,CAAC,IAAK;MACrB,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,IAAI;MAC9B,IAAI,CAACC,QAAQ,CAACC,SAAS,IAAG;QACtB,OAAO;UACN,CAACJ,YAAY,GAAGI,SAAS,CAACJ,YAAY,CAAC,GAAG;QAE1C,CAAC;MACN,CAAC,CAAC;IAEN,CAAC;IAAA,KAEDK,kBAAkB,GAAE,MAAM;MACtB,OAAO,IAAI,CAACX,KAAK,CAACE,OAAO,GAAE,IAAI,CAACF,KAAK,CAACG,GAAG,GAAE,IAAI,CAACH,KAAK,CAACC,IAAI;IAC9D,CAAC;IAAA,KAEDW,+BAA+B,GAAG,MAAM;MACvC,MAAMC,KAAK,GAAG,IAAI,CAACb,KAAK,CAACE,OAAO,GAAE,IAAI,CAACF,KAAK,CAACG,GAAG,GAAE,IAAI,CAACH,KAAK,CAACC,IAAI;MAC9D,OAAO,IAAI,CAACD,KAAK,CAACC,IAAI,GAACY,KAAK,GAAE,GAAG;IACrC,CAAC;EAAA;EAEDC,MAAMA,CAAA,EAAG;IACL,oBACClB,OAAA;MAAAmB,QAAA,gBACInB,OAAA;QAAGoB,SAAS,EAAC,WAAW;QAAAD,QAAA,EAAC;MAAuB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAErDxB,OAAA,CAACH,eAAe;QAACW,WAAW,EAAE,IAAI,CAACA;MAAY;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAElDxB,OAAA,CAACF,UAAU;QAACO,IAAI,EAAE,IAAI,CAACD,KAAK,CAACC,IAAK;QAACC,OAAO,EAAE,IAAI,CAACF,KAAK,CAACE,OAAQ;QAACC,GAAG,EAAE,IAAI,CAACH,KAAK,CAACG,GAAI;QACnFU,KAAK,EAAE,IAAI,CAACF,kBAAkB,CAAC,CAAE;QAACU,kBAAkB,EAAE,IAAI,CAACT;MAAgC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAK5F,CAAC;EACX;AACH"},"metadata":{},"sourceType":"module"}